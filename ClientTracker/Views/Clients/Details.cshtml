@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model ClientTracker.Models.Client

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Client</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Phone)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        @if (Model.Notes == null)
        {
            @if (@UserManager.GetUserAsync(User).Result.RoleId == 2)
            {
                <dd class="col-sm-10">
                    No notes.
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    <a asp-controller="Clients" asp-action="Edit" asp-route-id="@Model.Id">Add notes</a>
                </dd>
            }

        }
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>
    </dl>
</div>
<div>
    @if (@UserManager.GetUserAsync(User).Result.RoleId == 1)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> <span>|</span>
    }
    <a asp-action="Index">Back to List</a>
</div>
